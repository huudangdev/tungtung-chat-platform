"use strict";

function _interopDefault(ex) {
  return ex && "object" == typeof ex && "default" in ex ? ex.default : ex;
}

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _extends = _interopDefault(require("@babel/runtime/helpers/extends")), React = require("react"), core = require("@emotion/core"), weakMemoize = _interopDefault(require("@emotion/weak-memoize")), hoistNonReactStatics = _interopDefault(require("hoist-non-react-statics")), getTheme = function(outerTheme, theme) {
  return "function" == typeof theme ? theme(outerTheme) : _extends({}, outerTheme, theme);
}, createCacheWithTheme = weakMemoize(function(outerTheme) {
  return weakMemoize(function(theme) {
    return getTheme(outerTheme, theme);
  });
}), ThemeProvider = function(props) {
  return React.createElement(core.ThemeContext.Consumer, null, function(theme) {
    return props.theme !== theme && (theme = createCacheWithTheme(theme)(props.theme)), 
    React.createElement(core.ThemeContext.Provider, {
      value: theme
    }, props.children);
  });
};

function withTheme(Component) {
  var componentName = Component.displayName || Component.name || "Component", WithTheme = React.forwardRef(function(props, ref) {
    return React.createElement(core.ThemeContext.Consumer, null, function(theme) {
      return React.createElement(Component, _extends({
        theme: theme,
        ref: ref
      }, props));
    });
  });
  return WithTheme.displayName = "WithTheme(" + componentName + ")", hoistNonReactStatics(WithTheme, Component);
}

exports.ThemeProvider = ThemeProvider, exports.withTheme = withTheme;
