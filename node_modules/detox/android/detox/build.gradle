apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def _ext = rootProject.ext
def _compileSdkVersion = _ext.has('compileSdkVersion') ? _ext.compileSdkVersion : 28
def _buildToolsVersion = _ext.has('buildToolsVersion') ? _ext.buildToolsVersion : '28.0.3'
def _minSdkVersion = _ext.has('minSdkVersion') ? _ext.minSdkVersion : 18
def _targetSdkVersion = _ext.has('targetSdkVersion') ? _ext.targetSdkVersion : 28
def _kotlinVersion = _ext.has('detoxKotlinVersion') ? _ext.detoxKotlinVersion : '1.2.0'
def _kotlinStdlib = _ext.has('detoxKotlinStdlib') ? _ext.detoxKotlinStdlib : 'kotlin-stdlib-jdk8'

android {
    compileSdkVersion _compileSdkVersion
    buildToolsVersion _buildToolsVersion
    defaultConfig {
        minSdkVersion _minSdkVersion
        targetSdkVersion _targetSdkVersion
        versionCode 1
        versionName '1.0'

        consumerProguardFiles 'proguard-rules.pro'
    }

    testOptions {
        unitTests.returnDefaultValues = true

        unitTests.all { t ->
            reports {
                html.enabled true
            }
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
            }
            afterSuite { desc, result ->
                if (!desc.parent) { // will match the outermost suite
                    def output = "      ${result.resultType} (${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)     "
                    def repeatLength = output.length()
                    println '\n' + ('-' * repeatLength) + '\n' + output + '\n' + ('-' * repeatLength) + '\n'

                    println "see report at file://${t.reports.html.destination}/index.html"
                }
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:$_kotlinStdlib:$_kotlinVersion"

    // noinspection GradleDynamicVersion
    compileOnly 'com.facebook.react:react-native:+'

    implementation 'org.apache.commons:commons-lang3:3.7'

    // Versions are in-sync with the 'androidx-test-1.1.0' release/tag of the android-test github repo,
    // used by the Detox generator. See https://github.com/android/android-test/releases/tag/androidx-test-1.1.0
    // Important: Should remain so when generator tag is replaced!
    api('androidx.test.espresso:espresso-core:3.2.0') {
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    }
    api 'androidx.test:runner:1.2.0'
    api 'androidx.test:rules:1.2.0'
    api 'androidx.test.ext:junit:1.1.1'
    api 'androidx.annotation:annotation:1.1.0'

    // Version is the latest; Cannot sync with the Github repo (e.g. android/android-test) because the androidx
    // packaging version of associated classes is simply not there...
    api 'androidx.test.uiautomator:uiautomator:2.2.0'

    testImplementation 'org.json:json:20140107'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.assertj:assertj-core:3.8.0'
    testImplementation 'org.apache.commons:commons-io:1.3.2'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0'

    // noinspection GradleDynamicVersion
    testImplementation 'com.facebook.react:react-native:+'
}

// Spek (https://spekframework.org/setup-android)
if (rootProject.hasProperty('isOfficialDetoxLib') ||
    rootProject.hasProperty('isOfficialDetoxApp')) {
    apply plugin: 'de.mannodermaus.android-junit5'

    android {
        testOptions {
            junitPlatform {
                filters {
                    engines {
                        include 'spek2'
                    }
                }
            }
        }
    }

    dependencies {
        testImplementation 'org.spekframework.spek2:spek-dsl-jvm:2.0.9'
        testImplementation 'org.spekframework.spek2:spek-runner-junit5:2.0.9'
        testImplementation "org.jetbrains.kotlin:kotlin-reflect:$_kotlinVersion"
    }
}

// Enable publishing
if (rootProject.hasProperty('isOfficialDetoxLib')) {
    apply from: './detox-publishing.gradle'
}
