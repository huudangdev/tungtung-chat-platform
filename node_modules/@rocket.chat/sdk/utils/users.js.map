{"version":3,"file":"users.js","sourceRoot":"","sources":["../../src/utils/users.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,8EAA8E;AAC9E,qEAA8C;AAC9C,kCAAoC;AACpC,aAAO,EAAE,CAAA;AAET,IAAM,GAAG,GAAG,IAAI,oBAAU,CAAC,EAAE,CAAC,CAAA;AAC9B,SAAe,KAAK;;;;;;oBAClB,KAAA,CAAA,KAAA,OAAO,CAAA,CAAC,GAAG,CAAA;;oBAKR,KAAA,CAAA,KAAA,IAAI,CAAA,CAAC,SAAS,CAAA;oBAAC,qBAAM,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,EAAA;;8BAApC,cAAe,SAAqB,EAAE,IAAI,EAAE,IAAI,EAAC;oBAGjD,KAAA,CAAA,KAAA,IAAI,CAAA,CAAC,SAAS,CAAA;oBAAC,qBAAM,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAA;;8BAAzC,cAAe,SAA0B,EAAE,IAAI,EAAE,IAAI,EAAC;oBAGtD,KAAA,CAAA,KAAA,IAAI,CAAA,CAAC,SAAS,CAAA;oBAAC,qBAAM,GAAG,CAAC,KAAK,CAAC,MAAM,EAAE,EAAA;;8BAAvC,cAAe,SAAwB,EAAE,IAAI,EAAE,IAAI,EAAC;oBAGpD,KAAA,CAAA,KAAA,IAAI,CAAA,CAAC,SAAS,CAAA;oBAAC,qBAAM,GAAG,CAAC,KAAK,CAAC,MAAM,EAAE,EAAA;;8BAAvC,cAAe,SAAwB,EAAE,IAAI,EAAE,IAAI,EAAC;oBAGpD,KAAA,CAAA,KAAA,IAAI,CAAA,CAAC,SAAS,CAAA;oBAAC,qBAAM,GAAG,CAAC,KAAK,CAAC,WAAW,EAAE,EAAA;;8BAA5C,cAAe,SAA6B,EAAE,IAAI,EAAE,IAAI,EAAC;oBAGzD,KAAA,CAAA,KAAA,IAAI,CAAA,CAAC,SAAS,CAAA;oBAAC,qBAAM,GAAG,CAAC,KAAK,CAAC,SAAS,EAAE,EAAA;;oBApB7C,cAAY,KAoBT,cAAe,SAA2B,EAAE,IAAI,EAAE,IAAI,EAAC,WAEzD,EAAC,CAAA;;;;;CACH;AAED,KAAK,EAAE,CAAC,KAAK,CAAC,UAAC,CAAC,IAAK,OAAA,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAhB,CAAgB,CAAC,CAAA","sourcesContent":["// Test script uses standard methods and env config to connect and log streams\nimport ClientRest from '../lib/api/RocketChat'\nimport { silence } from '../lib/log'\nsilence()\n\nconst api = new ClientRest({})\nasync function users () {\n  console.log(`\n\n\t\t\tDemo of API user query helpers\n\n\t\t\tALL users \\`api.users.all()\\`:\n\t\t\t${JSON.stringify(await api.users.all(), null, '\\t')}\n\n\t\t\tALL usernames \\`api.users.allNames()\\`:\n\t\t\t${JSON.stringify(await api.users.allNames(), null, '\\t')}\n\n\t\t\tALL IDs \\`api.users.allIDs()\\`:\n\t\t\t${JSON.stringify(await api.users.allIDs(), null, '\\t')}\n\n\t\t\tONLINE users \\`api.users.online()\\`:\n\t\t\t${JSON.stringify(await api.users.online(), null, '\\t')}\n\n\t\t\tONLINE usernames \\`api.users.onlineNames()\\`:\n\t\t\t${JSON.stringify(await api.users.onlineNames(), null, '\\t')}\n\n\t\t\tONLINE IDs \\`api.users.onlineIds()\\`:\n\t\t\t${JSON.stringify(await api.users.onlineIds(), null, '\\t')}\n\n  `)\n}\n\nusers().catch((e) => console.error(e))\n"]}