{"version":3,"file":"config.js","sourceRoot":"","sources":["../../src/utils/config.ts"],"names":[],"mappings":";;AAUA,sEAAsE;AACzD,QAAA,OAAO,GAAgB;IAClC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,cAAc,IAAI,OAAO;IAC/C,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,MAAM;CAC3C,CAAA;AAED,+DAA+D;AAClD,QAAA,OAAO,GAAgB;IAClC,KAAK,EAAE,8BAA8B;IACrC,IAAI,EAAE,KAAK;IACX,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,mBAAmB,IAAI,MAAM;IACnD,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,eAAe,IAAI,KAAK;IAC9C,MAAM,EAAE,IAAI;IACZ,KAAK,EAAE,CAAC,KAAK,CAAC;IACd,mBAAmB,EAAE,IAAI;IACzB,qBAAqB,EAAE,KAAK;IAC5B,gBAAgB,EAAE,KAAK;IACvB,QAAQ,EAAE,IAAI;CACf,CAAA;AAED,sEAAsE;AACzD,QAAA,QAAQ,GAAgB;IACnC,KAAK,EAAE,+BAA+B;IACtC,IAAI,EAAE,WAAW;IACjB,QAAQ,EAAE,MAAM;IAChB,QAAQ,EAAE,MAAM;IAChB,MAAM,EAAE,IAAI;IACZ,KAAK,EAAE,CAAC,MAAM,CAAC;IACf,mBAAmB,EAAE,KAAK;IAC1B,qBAAqB,EAAE,KAAK;IAC5B,gBAAgB,EAAE,KAAK;IACvB,QAAQ,EAAE,IAAI;CACf,CAAA;AAED,0EAA0E;AAC1E,8EAA8E;AACjE,QAAA,WAAW,GAAyB;IAC/C,OAAO,EAAE;QACP,IAAI,EAAE,kBAAkB;QACxB,KAAK,EAAE,qBAAqB;QAC5B,KAAK,EAAE,WAAW;QAClB,KAAK,EAAE,iBAAiB;QACxB,mBAAmB;QACnB,oBAAoB;QACpB,iCAAiC;QACjC,oBAAoB;QACpB,KAAK;KACN;CACF,CAAA;AAEY,QAAA,UAAU,GAAyB;IAC9C;QACE,IAAI,EAAE,cAAc;QACpB,KAAK,EAAE,GAAG;KACX;IACD;QACE,IAAI,EAAE,qBAAqB;QAC3B,KAAK,EAAE,GAAG;KACX;CACF,CAAA;AAEY,QAAA,kBAAkB,GAAkC;IAC/D,IAAI,EAAE,kBAAkB;IACxB,KAAK,EAAE,oBAAoB;IAC3B,OAAO,EAAE,oBAAoB;CAC9B,CAAA;AAEY,QAAA,qBAAqB,GAA8B;IAC9D,KAAK,EAAE,WAAW;IAClB,GAAG,EAAE,EAAE;IACP,QAAQ,EAAE;QACR,MAAM,EAAE,KAAK;QACb,KAAK,EAAE,oBAAoB;QAC3B,QAAQ,EAAE;YACR,IAAI,EAAE,+CAA+C;SACtD;KACF;CACF,CAAA;AAEY,QAAA,eAAe,GAA+B;IACzD,GAAG,EAAE,SAAS;IACd,KAAK,EAAE,oBAAoB;IAC3B,SAAS,EAAE,IAAI;CAChB,CAAA;AAEY,QAAA,gBAAgB,GAAgC;IAC3D,KAAK,EAAE,WAAW;IAClB,YAAY,EAAE;QACZ;YACE,GAAG,EAAE,SAAS;YACd,KAAK,EAAE,mCAAmC;YAC1C,SAAS,EAAE,IAAI;SAChB;QACD;YACE,GAAG,EAAE,OAAO;YACZ,KAAK,EAAE,IAAI;YACX,SAAS,EAAE,IAAI;SAChB;KACF;CACF,CAAA","sourcesContent":["import {\n  INewUserAPI,\n  INewLivechatGuestAPI,\n  ILivechatSurveyAPI,\n  INewLivechatOfflineMessageAPI,\n  INewLivechatNavigationAPI,\n  INewLivechatCustomFieldAPI,\n  INewLivechatCustomFieldsAPI\n} from '../interfaces'\n\n// The API user, should be provisioned on build with local Rocket.Chat\nexport const apiUser: INewUserAPI = {\n  username: process.env.ADMIN_USERNAME || 'admin',\n  password: process.env.ADMIN_PASS || 'pass'\n}\n\n// The Bot user, will attempt to login and run methods in tests\nexport const botUser: INewUserAPI = {\n  email: 'bit-bucket+bot@test.smtp.org',\n  name: 'Bot',\n  password: process.env.ROCKETCHAT_PASSWORD || 'pass',\n  username: process.env.ROCKETCHAT_USER || 'bot',\n  active: true,\n  roles: ['bot'],\n  joinDefaultChannels: true,\n  requirePasswordChange: false,\n  sendWelcomeEmail: false,\n  verified: true\n}\n\n// The Mock user, will send messages via API for the bot to respond to\nexport const mockUser: INewUserAPI = {\n  email: 'bit-bucket+user@test.smtp.org',\n  name: 'Mock User',\n  password: 'mock',\n  username: 'mock',\n  active: true,\n  roles: ['user'],\n  joinDefaultChannels: false,\n  requirePasswordChange: false,\n  sendWelcomeEmail: false,\n  verified: true\n}\n\n// @todo fix custom field handling, either by using pre-test script to add\n//       required fields to test instance or by handling error without failing\nexport const mockVisitor: INewLivechatGuestAPI = {\n  visitor: {\n    name: 'Livechat Visitor',\n    email: 'visitor@rocket.chat',\n    token: '123456789',\n    phone: '55 51 5555-5555'\n    // customFields: [{\n    //   key: 'address',\n    //   value: 'Rocket.Chat street',\n    //   overwrite: true\n    // }]\n  }\n}\n\nexport const mockSurvey: ILivechatSurveyAPI[] = [\n  {\n    name: 'satisfaction',\n    value: '3'\n  },\n  {\n    name: 'agentResponsiveness',\n    value: '5'\n  }\n]\n\nexport const mockOfflineMessage: INewLivechatOfflineMessageAPI = {\n  name: 'Livechat Visitor',\n  email: 'sample@rocket.chat',\n  message: 'This is a Message!'\n}\n\nexport const mockVisitorNavigation: INewLivechatNavigationAPI = {\n  token: '123456789',\n  rid: '',\n  pageInfo: {\n    change: 'url',\n    title: 'Livechat Demo Page',\n    location: {\n      href: 'http://localhost:3000/assets/demo.html#page-1'\n    }\n  }\n}\n\nexport const mockCustomField: INewLivechatCustomFieldAPI = {\n  key: 'address',\n  value: 'Rocket.Chat Avenue',\n  overwrite: true\n}\n\nexport const mockCustomFields: INewLivechatCustomFieldsAPI = {\n  token: '123456789',\n  customFields: [\n    {\n      key: 'address',\n      value: 'Rocket.Chat Avenue - Porto Alegre',\n      overwrite: true\n    },\n    {\n      key: 'state',\n      value: 'RS',\n      overwrite: true\n    }\n  ]\n}\n"]}