{"version":3,"file":"Livechat.js","sourceRoot":"","sources":["../../../src/lib/api/Livechat.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBH,8CAA2B;AAE3B;IAAyC,+BAAO;IAAhD;QAAA,qEAuCC;QAtCC,iBAAW,GAA+B,EAAS,CAAA;;IAsCrD,CAAC;IArCC,2BAAK,GAAL,UAAO,KAAiC,IAAI,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAA,CAAC,CAAC;IACvE,4BAAM,GAAZ,UAAc,MAA0B;;;wBAAY,qBAAM,IAAI,CAAC,GAAG,CAAC,iBAAiB,EAAE,MAAM,EAAE,KAAK,CAAC,EAAA;wBAAxD,sBAAO,CAAC,SAAgD,CAAC,CAAC,MAAM,EAAA;;;KAAE;IACxG,0BAAI,GAAV,UAAY,MAAsC;;;wBAAY,qBAAM,IAAI,CAAC,GAAG,CAAC,eAAe,aAAI,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,IAAK,MAAM,GAAI,KAAK,CAAC,EAAA;wBAA5F,sBAAO,CAAC,SAAoF,CAAC,CAAC,IAAI,EAAA;;;KAAE;IAC1J,+BAAS,GAAT,UAAW,EAAsB;YAApB,YAAG;QAAqB,OAAO,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAAE,GAAG,KAAA,EAAE,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,EAAE,KAAK,CAAC,CAAA;IAAC,CAAC;IAC7H,kCAAY,GAAZ,UAAc,EAAkC;YAAhC,YAAG,EAAE,0BAAU;QAAqB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,wBAAwB,EAAE,EAAE,GAAG,KAAA,EAAE,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,UAAU,YAAA,EAAE,EAAE,KAAK,CAAC,CAAC,CAAA;IAAC,CAAC;IAC7J,gCAAU,GAAV,UAAY,MAA8B,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,EAAE,GAAG,EAAE,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,EAAE,KAAK,CAAC,CAAC,CAAA,CAAC,CAAC;IACxK,6BAAO,GAAP,cAAa,OAAO,IAAI,CAAC,GAAG,CAAC,sBAAoB,IAAI,CAAC,WAAW,CAAC,KAAO,CAAC,CAAA,CAAC,CAAC;IACtE,kCAAY,GAAlB,UAAoB,KAA2B;;;;;4BACzB,qBAAM,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,KAAK,EAAE,KAAK,CAAC,EAAA;;wBAA7D,OAAO,GAAK,CAAA,SAAiD,CAAA,QAAtD;wBACf,IAAI,CAAC,WAAW,GAAG;4BACjB,KAAK,EAAE,OAAO,CAAC,KAAK;yBACrB,CAAA;wBACD,sBAAO,OAAO,EAAA;;;;KACf;IACK,mCAAa,GAAnB;;;wBAAiC,qBAAM,IAAI,CAAC,GAAG,CAAC,sBAAoB,IAAI,CAAC,WAAW,CAAC,KAAO,CAAC,EAAA;wBAApE,sBAAO,CAAC,SAA4D,CAAC,CAAC,OAAO,EAAA;;;KAAE;IAClG,yCAAmB,GAAzB,UAA2B,MAAc;;;wBAAY,qBAAM,IAAI,CAAC,IAAI,CAAC,yBAAyB,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,QAAA,EAAE,CAAC,EAAA;wBAA7F,sBAAO,CAAC,SAAqF,CAAC,CAAC,MAAM,EAAA;;;KAAE;IAC9I,+BAAS,GAAf,UAAiB,UAAuB;QAAvB,2BAAA,EAAA,eAAuB;;;wBAAY,qBAAM,IAAI,CAAC,GAAG,CAAC,yBAAuB,IAAI,CAAC,WAAW,CAAC,KAAO,EAAE,EAAE,UAAU,YAAA,EAAE,CAAC,EAAA;wBAAvF,sBAAO,CAAC,SAA+E,CAAC,CAAC,KAAK,EAAA;;;KAAE;IACtI,2BAAK,GAAX,UAAa,EAAY;YAAV,YAAG;;;wBAAmB,qBAAM,IAAI,CAAC,GAAG,CAAC,yBAAuB,GAAG,SAAI,IAAI,CAAC,WAAW,CAAC,KAAO,CAAC,EAAA;wBAA9E,sBAAO,CAAC,SAAsE,CAAC,CAAC,KAAK,EAAA;;;KAAE;IAC9G,6BAAO,GAAb,UAAe,EAAU,EAAE,MAAqB;;;wBAAY,qBAAM,IAAI,CAAC,GAAG,CAAC,sBAAoB,EAAI,aAAI,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,IAAK,MAAM,EAAG,EAAA;wBAA9F,sBAAO,CAAC,SAAsF,CAAC,CAAC,OAAO,EAAA;;;KAAE;IAC7J,iCAAW,GAAX,UAAa,OAA+B,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,eAAO,OAAO,IAAE,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,KAAI,KAAK,CAAC,CAAC,CAAA,CAAC,CAAC;IAC9I,iCAAW,GAAX,UAAa,EAAU,EAAE,OAA+B,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,sBAAoB,EAAI,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,CAAA,CAAC,CAAC;IACzH,mCAAa,GAAb,UAAe,EAAU,EAAE,EAAsB;YAApB,YAAG;QAAqB,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,sBAAoB,EAAI,EAAE,EAAE,GAAG,KAAA,EAAE,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,EAAE,KAAK,CAAC,CAAC,CAAA;IAAC,CAAC;IAC3I,kCAAY,GAAlB,UAAoB,GAAW,EAAE,MAAiC;;;wBAAY,qBAAM,IAAI,CAAC,GAAG,CAAC,+BAA6B,GAAK,eAAO,MAAM,IAAE,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,KAAI,KAAK,CAAC,EAAA;wBAA/G,sBAAO,CAAC,SAAuG,CAAC,CAAC,QAAQ,EAAA;;;KAAE;IAC3L,wCAAkB,GAAxB,UAA0B,OAAsC;;;wBAAY,qBAAM,IAAI,CAAC,IAAI,CAAC,0BAA0B,eAAO,OAAO,GAAI,KAAK,CAAC,EAAA;wBAA1E,sBAAO,CAAC,SAAkE,CAAC,CAAC,OAAO,EAAA;;;KAAE;IACzJ,2CAAqB,GAArB,UAAuB,IAA+B,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,eAAO,IAAI,GAAI,KAAK,CAAC,CAAC,CAAA,CAAC,CAAC;IAC3H,uCAAiB,GAAjB,UAAmB,KAAa,EAAE,EAAsB;YAApB,YAAG;QAAqB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,GAAG,KAAA,EAAE,KAAK,OAAA,EAAE,EAAE,KAAK,CAAC,CAAC,CAAA;IAAC,CAAC;IAC7J,+BAAS,GAAT,UAAW,EAAsB;YAApB,YAAG;QAAqB,OAAO,IAAI,CAAC,GAAG,CAAC,yBAAuB,IAAI,CAAC,WAAW,CAAC,KAAO,EAAE,EAAE,GAAG,KAAA,EAAE,EAAE,KAAK,CAAC,CAAA;IAAC,CAAC;IACvH,qCAAe,GAAf,UAAiB,KAAiC,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE,KAAK,EAAE,KAAK,CAAC,CAAA,CAAC,CAAC;IAC/G,sCAAgB,GAAhB,UAAkB,MAAmC,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,wBAAwB,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA,CAAC,CAAC;IACpH,gCAAU,GAAV,UAAY,MAA0B;QACpC,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAA;QAC/B,IAAM,sBAAsB,GAAG;YAC7B,iBAAiB,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK;SAC1C,CAAA;QACD,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,CAAA;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,qBAAmB,MAAM,CAAC,GAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,aAAa,EAAE,sBAAsB,EAAE,CAAC,CAAA;IAC1H,CAAC;IACH,kBAAC;AAAD,CAAC,AAvCD,CAAyC,aAAO,GAuC/C","sourcesContent":["/**\n * @module ApiLivechat\n * Provides a client for making requests with Livechat Rocket.Chat's REST API\n */\n\nimport {\n\tILivechatTokenAPI,\n\tILivechatRoomCredentialAPI,\n\tILivechatRoomSurveyAPI,\n\tINewLivechatGuestAPI,\n\tINewLivechatMessageAPI,\n\tILivechatRoomMessagesAPI,\n\tINewLivechatNavigationAPI,\n\tINewLivechatCustomFieldAPI,\n\tINewLivechatOfflineMessageAPI,\n\tINewLivechatCustomFieldsAPI,\n\tILivechatRoom,\n\tINewLivechatRoomCredentialAPI,\n\tILivechatUploadAPI\n} from '../../interfaces'\n\nimport ApiBase from './api'\n\nexport default class ApiLivechat extends ApiBase {\n  credentials: ILivechatRoomCredentialAPI = {} as any\n  login (guest: INewLivechatGuestAPI | any) { return this.grantVisitor(guest) }\n  async config (params?: ILivechatTokenAPI) { return (await this.get('livechat/config', params, false)).config }\n  async room (params?: INewLivechatRoomCredentialAPI) { return (await this.get('livechat/room', { token: this.credentials.token, ...params }, false)).room }\n  closeChat ({ rid }: ILivechatRoom) { return this.post('livechat/room.close', { rid, token: this.credentials.token }, false) }\n  transferChat ({ rid, department }: ILivechatRoom) { return (this.post('livechat/room.transfer', { rid, token: this.credentials.token, department }, false)) }\n  chatSurvey (survey: ILivechatRoomSurveyAPI) { return (this.post('livechat/room.survey', { rid: survey.rid, token: this.credentials.token, data: survey.data }, false)) }\n  visitor () { return this.get(`livechat/visitor/${this.credentials.token}`) }\n  async grantVisitor (guest: INewLivechatGuestAPI) {\n    const { visitor } = await this.post('livechat/visitor', guest, false)\n    this.credentials = {\n      token: visitor.token\n    }\n    return visitor\n  }\n  async deleteVisitor () { return (await this.del(`livechat/visitor/${this.credentials.token}`)).visitor }\n  async updateVisitorStatus (status: string) { return (await this.post(`livechat/visitor.status`, { token: this.credentials.token, status })).status }\n  async nextAgent (department: string = '') { return (await this.get(`livechat/agent.next/${this.credentials.token}`, { department })).agent }\n  async agent ({ rid }: any) { return (await this.get(`livechat/agent.info/${rid}/${this.credentials.token}`)).agent }\n  async message (id: string, params: ILivechatRoom) { return (await this.get(`livechat/message/${id}`, { token: this.credentials.token, ...params })).message }\n  sendMessage (message: INewLivechatMessageAPI) { return (this.post('livechat/message', { ...message, token: this.credentials.token }, false)) }\n  editMessage (id: string, message: INewLivechatMessageAPI) { return (this.put(`livechat/message/${id}`, message, false)) }\n  deleteMessage (id: string, { rid }: ILivechatRoom) { return (this.del(`livechat/message/${id}`, { rid, token: this.credentials.token }, false)) }\n  async loadMessages (rid: string, params?: ILivechatRoomMessagesAPI) { return (await this.get(`livechat/messages.history/${rid}`, { ...params, token: this.credentials.token }, false)).messages }\n  async sendOfflineMessage (message: INewLivechatOfflineMessageAPI) { return (await this.post('livechat/offline.message', { ...message }, false)).message }\n  sendVisitorNavigation (page: INewLivechatNavigationAPI) { return (this.post('livechat/page.visited', { ...page }, false)) }\n  requestTranscript (email: string, { rid }: ILivechatRoom) { return (this.post('livechat/transcript', { token: this.credentials.token, rid, email }, false)) }\n  videoCall ({ rid }: ILivechatRoom) { return this.get(`livechat/video.call/${this.credentials.token}`, { rid }, false) }\n  sendCustomField (field: INewLivechatCustomFieldAPI) { return this.post('livechat/custom.field', field, false) }\n  sendCustomFields (fields: INewLivechatCustomFieldsAPI) { return this.post('livechat/custom.fields', fields, false) }\n  uploadFile (params: ILivechatUploadAPI) {\n    const formData = new FormData()\n    const headersNeededForUpload = {\n      'x-visitor-token': this.credentials.token\n    }\n    formData.append('file', params.file)\n    return this.post(`livechat/upload/${params.rid}`, formData, false, undefined, { customHeaders: headersNeededForUpload })\n  }\n}\n"]}